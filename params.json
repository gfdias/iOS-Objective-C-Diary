{"name":"iOS & Objective-C Diary","tagline":"A small diary about useful iOS/Objective-C topics","body":"# iOS & Objective-C Diary\r\n\r\n### Disclaimer\r\n\r\nThis is a page created with the purpose of gathering what I consider to be the most important and useful topics I've learned about iOS and Objective-C. Keep in mind that the contents of this document may present some errors or misconceptions regarding this topic. Nevertheless, you are free to use or reference it any way you want.\r\n\r\n***\r\n\r\n## Table of contents\r\n\r\n+ [Purchasing a developer license](#purchasing-a-developer-license)\r\n+ [Create, download and install certificates](#create-download-and-install-certificates)\r\n+ [Create an App ID](#create-an-app-id)\r\n+ [Actions](#actions)\r\n+ [Outlets](#outlets)\r\n+ [Labels](#labels)\r\n+ [TextField](#textField)\r\n+ [Dismissing the Keyboard](#dismissing-the-keyboard)\r\n+ [NSTimer](#nstimer)\r\n\r\n***\r\n\r\n## Purchasing a developer license\r\nIn order to be able to submit your apps to the store, you will need to enroll on a paid membership for iOS app distribution, but you **do not have to do this step** if, for now, you just want to learn or start creating you app.\r\n\r\n1. Go to http://developer.apple.com\r\n2. Then click **Program** on the top bar\r\n3. Click **Enroll**\r\n4. Sign in or create a new Apple ID\r\n5. Purchase the license for iOS Development\r\n\r\n\r\n***\r\n\r\n## Create, download and install certificates\r\n\r\n1. Go to http://developer.apple.com\r\n  * Enter **member center**\r\n  * Login\r\n  * Go to **Certificates, Identifiers & Profiles**\r\n  * Click **Certificates**\r\n    1. Development\r\n      + Click **+** to add a new **iOS App Development** certificate\r\n    2. Production\r\n      + Click **+** to add a new **Distribution Profile** certificate\r\n  * Go to **iOS Provisioning profiles**\r\n    + Click **+** to add a new **iOS Distribution_ profile**\r\n2. Download and add to Xcode all the Certificates\r\n\r\n***\r\n\r\n## Create an App ID\r\n\r\n+ On your browser\r\n\r\n  1. Go to http://developer.apple.com\r\n  2. Click member center\r\n  3. Certificates, identifiers & profiles\r\n  4. Identifiers\r\n  5. iOS App Ids\r\n  6. Add (+) a new one\r\n\r\n\r\n+ On Xcode\r\n\r\n    1.  Create new project with same bundle identifier as the app added before\r\n    2. Go to _Info.plist_\r\n    3. Exchange _Bundle Identifier_ for the one created before\r\n\r\n***\r\n\r\n## Actions\r\n\r\nActions enable us to trigger objects to perform tasks.\r\n\r\nCan be created manually or trough the interface builder.\r\n\r\n#### Example\r\n\r\n\r\n***\r\n\r\n```objc\r\n/* ViewController.h */\r\n- (IBAction)actionButton:(id)sender;\r\n```\r\n\r\n```objc\r\n/* ViewController.m */\r\n\r\n- (IBAction)actionButton:(id)sender {\r\n\r\n  //DO SOMETHING\r\n}\r\n```\r\n\r\n***\r\n\r\n## Outlets\r\n\r\nOutlets display information triggered by the actions performed on the screen.\r\n\r\nCan be created manually or trough the interface builder.\r\n\r\n#### Example\r\n\r\n***\r\n\r\n```objc\r\n/* ViewController.h */\r\n\r\n@property (weak, nonatomic) IBOutlet UILabel *label;\r\n```\r\n***\r\n\r\n## Labels\r\n\r\nLabels are objects used to display text.\r\n\r\n#### Example\r\n\r\n***\r\n\r\n```objc\r\n/* Declaration */\r\n\r\n@property (weak, nonatomic) IBOutlet UILabel *label;\r\n\r\n```\r\n```objc\r\n/* Change label text */\r\n\r\nself.label.text = @\"Hello World\";\r\n```\r\n***\r\n\r\n## TextField\r\n\r\nTextField is an object that allows input from the user (like a search bar for example).\r\n\r\n#### Example\r\n\r\n***\r\n\r\n```objc\r\n/* Declaration */\r\n\r\n@property (weak, nonatomic) IBOutlet UITextField *textField;\r\n\r\n```\r\n```objc\r\n/* Change label text to textField input */\r\n\r\nself.label.text = self.textField.text;\r\n```\r\n***\r\n\r\n## Text Properties\r\n\r\nChange the text properties of objects that display text.\r\n\r\n### Examples\r\n\r\n***\r\n\r\n```objc\r\n/* Change text color */\r\n\r\nself.label.textColor = [UIColor redColor];\r\n\r\n```\r\n```objc\r\n/* Set text font size */\r\n\r\n[self.label setFont:[UIFont fontWithName:@\"Verdana\" size:25]];\r\n\r\n```\r\n```objc\r\n/* Set text shadow */\r\n\r\nself.label.layer.shadowColor = [[UIColor blackColor] CGColor];\r\nself.label.layer.shadowOpacity = 0.5;\r\nself.label.layer.shadowRadius = 1.0f;\r\nself.label.layer.shadowOffset = CGSizeMake(0, 2); // x & y offset\r\n\r\n```\r\n```objc\r\n/* Align Text */\r\n\r\nself.label.textAlignment = NSTextAlignmentLeft;\r\nself.label.textAlignment = NSTextAlignmentRight;\r\nself.label.textAlignment = NSTextAlignmentCenter;\r\n\r\n```\r\n\r\n***\r\n\r\n#### Custom font\r\n\r\n- Download font\r\n- Drag and drop to _Xcode Supporting Files_\r\n- Go to _info.plist_\r\n- Add _Fonts provided by application_\r\n- Add new item with font file name\r\n\r\n```objc\r\n/* On ViewDidLoad, if you want to apply the font right after the view is loaded */\r\n\r\nself.label.font = [UIFont fontWithName:@\"BebasNeue\" size:50];\r\n\r\n```\r\n\r\n***\r\n\r\n## Dismissing the Keyboard\r\n\r\n- Create a _Did End On Exit_ action on a _textField_, for example\r\n- Change _textField_ atribute _Return Key_ to _Done_\r\n\r\n***\r\n\r\n```objc\r\n/* For compatibility with older iOS versions, add this to the action button method*/\r\n\r\n[self resignFirstResponder];\r\n```\r\n***\r\n\r\n## NSTimer\r\n\r\n#### Declaration example\r\n\r\n***\r\n```objc\r\n/* ViewController.h */\r\n\r\n#import <UIKit/UIKit.h>\r\n\r\n@interface ViewController : UIViewController {\r\n\r\n  NSTimer *timer;\r\n  int timeCounter;\r\n\r\n}\r\n\r\n@property (weak, nonatomic) IBOutlet UILabel *label;\r\n\r\n- (IBAction)startCount:(id)sender;\r\n\r\n@end\r\n\r\n\r\n```\r\n\r\n#### Implementation example\r\n\r\n***\r\n\r\n```objc\r\n/* ViewController.m\r\n\r\n   @implementation ViewControler\r\n\r\n   [...]\r\n*/\r\n\r\n\r\n// Action for a button that starts a timer\r\n\r\n- (IBAction)startCount:(id)sender {\r\n\r\n  timeCounter = 0;\r\n\r\n  self.label.text = [NSString stringWithFormat:@\"%i\", timeCounter];\r\n\r\n\r\n// Timer that refreshes every second by calling the countTime method\r\n\r\n  timer = [NSTimer scheduledTimerWithTimeInterval:1.0 target:self selector:@selector(countTime) userInfo:nil repeats:YES];\r\n\r\n}\r\n\r\n- (void)countTime {\r\n\r\n  timeCounter += 1;\r\n\r\n  self.label.text = [NSString stringWithFormat:@\"%i\", timeCounter];\r\n\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}